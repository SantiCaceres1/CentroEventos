@page "/Registro"

@inject UsuarioSesion Sesion
@inject IRepositorioUsuario RepositorioUsuario
@inject NavigationManager Navigation

<h3 class="text-center mb-4">Registro</h3>
<div class="form-container mx-auto" style="max-width: 400px;">
    @if (!string.IsNullOrEmpty(Error))
    {
        <div class="alert alert-danger">@Error</div>
    }
    <input class="form-control mb-2" placeholder="Nombre" @bind="Nombre" />
    <input class="form-control mb-2" placeholder="Email" @bind="Email" />
    <input class="form-control mb-2" placeholder="Contrase√±a" type="password" @bind="Password" />
    <input class="form-control mb-2" placeholder="Confirmar Contrase√±a" type="password" @bind="ConfirmPassword" />
    <button class="btn btn-success w-100" @onclick="()=>RegistrarUsuario()" >Crear cuenta</button>

</div>

<p class="mt-3 text-center">
    ¬øYa ten√©s cuenta? <NavLink href="/Login">Inici√° sesi√≥n</NavLink>
</p>

@code {
    private string Nombre { get; set; } = string.Empty;
    private string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private string ConfirmPassword { get; set; } = string.Empty;
    private string Error { get; set; } = string.Empty;

    private async Task RegistrarUsuario()
    {
        Error = string.Empty;
        Console.WriteLine("‚û°Ô∏è Entrando al m√©todo RegistrarUsuario");

        if (string.IsNullOrWhiteSpace(Nombre) || string.IsNullOrWhiteSpace(Email) || string.IsNullOrWhiteSpace(Password))
        {
            Error = "Todos los campos son obligatorios.";
            Console.WriteLine("‚ùå Campos vac√≠os detectados.");
            return;
        }

        if (Password != ConfirmPassword)
        {
            Error = "Las contrase√±as no coinciden.";
            Console.WriteLine("‚ùå Contrase√±as no coinciden.");
            return;
        }

        try
        {
            var usuarios = await Sesion.ListarUsuarios();
            Console.WriteLine($"üë• Cantidad de usuarios en el sistema: {usuarios.Count}");

            if (usuarios.Count == 0)
            {
                Console.WriteLine("üõ† Primer usuario del sistema. Se crear√° como admin.");

                var nuevoUsuario = new Usuario(Nombre, Email, Password);
                await RepositorioUsuario.Agregar(nuevoUsuario);
                Console.WriteLine("‚úÖ Usuario creado correctamente.");

                var creado = await RepositorioUsuario.ObtenerPorCorreoElectronico(Email);
                if (creado != null)
                {
                    Console.WriteLine("üîë Asignando permisos de administrador...");
                    await RepositorioUsuario.AgregarPermiso(creado.Id, Permiso.UsuarioAlta);
                    await RepositorioUsuario.AgregarPermiso(creado.Id, Permiso.UsuarioModificacion);
                    await RepositorioUsuario.AgregarPermiso(creado.Id, Permiso.UsuarioBaja);
                    Console.WriteLine("‚úÖ Permisos asignados.");
                }
                else
                {
                    Console.WriteLine("‚ùå No se pudo recuperar el usuario reci√©n creado.");
                    Error = "Error interno al crear el usuario.";
                    return;
                }
            }
            else
            {
                if (!Sesion.EstaLogueado())
                {
                    Console.WriteLine("‚ùå No hay sesi√≥n iniciada para alta de usuario.");
                    Error = "Deb√©s iniciar sesi√≥n para registrar nuevos usuarios.";
                    return;
                }

                Console.WriteLine("üîí Sesi√≥n v√°lida, intentando registrar nuevo usuario...");
                bool exito = await Sesion.RegistrarUsuario(Nombre, Email, Password);
                if (!exito)
                {
                    Console.WriteLine("‚ùå El correo ya est√° registrado.");
                    Error = "Ya existe un usuario con ese correo.";
                    return;
                }

                Console.WriteLine("‚úÖ Usuario registrado correctamente desde sesi√≥n.");
            }

            Console.WriteLine("‚û°Ô∏è Redirigiendo a /Login");
            Navigation.NavigateTo("/Login");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"üî• Excepci√≥n: {ex.Message}");
            Error = "Error: " + ex.Message;
        }
    }
}
